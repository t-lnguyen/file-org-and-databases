<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>allowDataLocalInfile</key>
			<integer>0</integer>
			<key>database</key>
			<string>CS7330_Project</string>
			<key>enableClearTextPlugin</key>
			<integer>0</integer>
			<key>host</key>
			<string>localhost</string>
			<key>kcid</key>
			<string>-257101206588769657</string>
			<key>name</key>
			<string>MySql_Testing</string>
			<key>port</key>
			<integer>3306</integer>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8mb4</string>
			<key>contentFilterV2</key>
			<dict>
				<key>children</key>
				<array/>
				<key>filterClass</key>
				<string>groupNode</string>
				<key>isConjunction</key>
				<true/>
			</dict>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0
			b3BYJG9iamVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRk
			YXRhgAGtCwwZGhscHSEoLDA0OFUkbnVsbNMNDg8QFBhXTlMua2V5
			c1pOUy5vYmplY3RzViRjbGFzc6MREhOAAoADgASjFRYXgAWABoAI
			gAxUdHlwZVRyb3dzVGtleXNfECZTZWxlY3Rpb25EZXRhaWxUeXBl
			UHJpbWFyeUtleWVkRGV0YWlsc9MNDg8eHyCgoIAH0iIjJCVaJGNs
			YXNzbmFtZVgkY2xhc3Nlc18QE05TTXV0YWJsZURpY3Rpb25hcnmj
			JCYnXE5TRGljdGlvbmFyeVhOU09iamVjdNIODykroSqACYAL0g8t
			Li9ZTlMuc3RyaW5ngApcSW5zcGVjdGlvbklE0iIjMTJfEA9OU011
			dGFibGVTdHJpbmejMTMnWE5TU3RyaW5n0iIjNTZeTlNNdXRhYmxl
			QXJyYXmjNTcnV05TQXJyYXnSIiMmOaImJwAIABEAGgAkACkAMgA3
			AEkATABRAFMAYQBnAG4AdgCBAIgAjACOAJAAkgCWAJgAmgCcAJ4A
			owCoAK0A1gDdAN4A3wDhAOYA8QD6ARABFAEhASoBLwExATMBNQE6
			AUQBRgFTAVgBagFuAXcBfAGLAY8BlwGcAAAAAAAAAgEAAAAAAAAA
			OgAAAAAAAAAAAAAAAAAAAZ8=
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {693, 474}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>
-- Builders can only request inspections per month
-- -- Building.Address and Inspection.InspectionDate must not exceed 5 for an Inspector
delimiter |
CREATE TRIGGER enforce_Inspection_request_limit
BEFORE INSERT ON Inspection
FOR EACH ROW
BEGIN
	-- If an Inspector.EmployeeID already has 5 Inspections.InspectionID assigned, of which are all contained in a month,
    -- assumming they pass the sequencing requirements, then the NEW.InspectionID cannot be inserted
    IF((select COUNT(*) from Inspection i where i.EmployeeID = NEW.EmployeeID AND month(i.InspectionDate) = month(NEW.InspectionDate)) &gt; 5) THEN
			signal sqlstate '45000' set message_text = 'Max Inspection Requests for an Inspector are 5 max per month!';	
        END IF;
END
|
delimiter ;

-- Check type code sequencing 
-- -- FRM must happen before any other except for FRM and HIS and SAF
-- -- PLU must happen before FNL, FN2, FN3
-- -- ELE must happen before FN2
delimiter |
CREATE TRIGGER enforce_Inspection_Type_sequence_and_pass_status
BEFORE INSERT ON Inspection
FOR EACH ROW
BEGIN
	-- If Inspection.Type is PLU OR ELE AND the assigned Inspector.Address does not have a Inspection.Type = FRM and of this, a passing Inspection Inspection.InspectionResult = 1,
    -- then it cannot be inserted
    IF((NEW.Type = 'PLU' OR NEW.Type = 'ELE') AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'FRM' AND i.InspectionResults = 1))
		THEN
		signal sqlstate '45010' set message_text = 'Inspection Type PLU or ELE does not have passing FRM!';	
    END IF;
    
    -- If Inspection.Type is FN3 OR POL AND the assigned Inspector.EmployeeID does not have a Inspection.Type = PLU and Inspection.InspectionResult = Pass,
    -- then it cannot be inserted
      IF((NEW.Type = 'FN3' OR NEW.Type = 'POL') AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'PLU' AND i.InspectionResults = 1)) 
		THEN
		signal sqlstate '45011' set message_text = 'Inspection Type FN3 or POL does not have passing PLU!';	
    END IF;
    
    -- If Inspection.Type is HAC AND the assigned Inspector.EmployeeID does not have a Inspection.Type = ELE and Inspection.InspectionResult = Pass,
    -- then it cannot be inserted
    IF((NEW.Type = 'HAC') AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'ELE' AND i.InspectionResults = 1)) 
		THEN
		signal sqlstate '45012' set message_text = 'Inspection Type HAC does not have passing ELE!';	
    END IF;   
      -- If Inspection.Type is FNL AND the assigned Inspector.EmployeeID does not have a Inspection.Type = HAC AND Inspection.Type = PLU AND Inspection.InspectionResult = Pass for both,
    -- then it cannot be inserted
    IF((NEW.Type = 'FNL') AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'HAC' AND i.InspectionResults = 1) AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'PLU' AND i.InspectionResults = 1)) THEN
			signal sqlstate '45013' set message_text = 'Inspection Type FNL does not have passing HAC AND PLU!';	
    END IF;
	-- If Inspection.Type is FN2 AND the assigned Inspector.EmployeeID does not have a Inspection.Type = ELE AND Inspection.Type = PLU AND Inspection.InspectionResult = Pass for both,
    -- then it cannot be inserted
    IF((NEW.Type = 'FN2')AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'ELE' AND i.InspectionResults = 1) AND 
		NOT EXISTS(select i.InspectionDate from Inspection i where i.Address = NEW.Address AND i.Type = 'PLU' AND i.InspectionResults = 1)) THEN
			signal sqlstate '45014' set message_text = 'Inspection Type FN2 does not have passing ELE AND PLU!';	
    END IF;
 
END
|
delimiter ;


-- A Builder and Building.Location must exist before requesting an inspection
-- -- Check BuilderID on Builder and Building AND see if the Address is NOT NULL
delimiter |
CREATE TRIGGER enforce_Builder_Building_existent_before_inspection_rq
BEFORE INSERT ON Inspection
FOR EACH ROW
BEGIN
    IF(NOT EXISTS(select b.* from Builder b join Building b1 on b.LicenseID = b1.BuilderID where b.LicenseID = NEW.LicenseID AND b1.Address IS NOT NULL)) THEN
            signal sqlstate '45005' set message_text = 'Builder or Building must exist before requesting an Inspection!';  
        END IF;
END
|
delimiter ;

-- -- -- -- -- TESTING TRIGGER -- -- -- -- 

select i.InspectionDate from Inspection i where month(i.InspectionDate) = 10 AND i.EmployeeID = 101 AND i.Type = 'FRM' AND i.InspectionResults = 1;


</string>
			<key>table</key>
			<string>Inspection</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>158.5</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>8.0.27</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
